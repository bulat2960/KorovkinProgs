Задание: 
CL21. Написать шаблонную функцию для вычисления определителя матрицы
произвольной размерности способом разложения по элементам
строки/столбца.

Решение: 
В ЗАДАЧЕ ПРИМЕНЯЕТСЯ МЕТОД РАЗЛОЖЕНИЯ ПО ЭЛЕМЕНТАМ ПЕРВОЙ СТРОКИ
1. Стандартно задаем матрицу, проверяя на правильность введенной размерности.
2. Инициализируем поля матрицы функцией generateMatrix.
3. Показываем матрицу вызовом showMatrix.
4. Вызываем функцию det c модификатором вывода setprecision. NOTE: модификатор setprecision устанавливает точность вывода значения. Для того, чтобы 
большие числа типа double не выводились, к примеру, вот так (1.23e+008), ставим в параметр setprecision необходимое количество символов вывода этого числа.
5. Принцип работы разложения по элементам ПЕРВОЙ строки: det(A) = ai1*Ai1 - ai2*Ai2 + ... + aij*Aij, где a1i - собственно, элемент матрицы, А1i - алгебраическое 
дополнение, которое вычисляется по формуле (-1)^(i + j) * Mij, где i - номер строки(в данном случае всегда 0, так как разложение по первой строке), 
j - номер элемента в строке, Mij - минор элемента a(ij). Таким образом, для решения данной задачи выполняем следующие действия:
5.1. Если размер матрицы больше двух, создаем матрицу размерами на 1 меньше исходной и переносим в нее минор текущего элемента.
5.2. Так как один индекс у нас зафиксирован(равен нулю в разложении по первой строке), достаточно проверять только изменяющийся. Если его координата 
кратна двум, то знак алгебраического дополнения плюс,  иначе минус. Далее, если размер матрицы все так же больше двух, вызываем рекурсивно функцию
уже для минора этой матрицы, умножив значение функции на соответствующий элемент. По завершению работы получим искомый определитель матрицы.

Пример разложения матрицы А
5 4 3 5
7 2 6 8
1 6 3 2
4 5 2 1
по элементам первой строки(исключительно для показа принципа работы кода, я не ставлю под сомнение то, что посчитать это руками вы в состоянии:D)

			  (2 6 8)
det(А) = 5*det(6 3 2) - 4*det ... и так далее
			  (5 2 1)
			  
Для каждой из полученных матриц 3x3 будет вызвана та же самая функция рекурсивно, то есть по сути, в конце концов, эта матрица 4х4 будет разложена
на множество матриц 2x2, у каждой из которых программа посчитает определитель обычным способом: a11*a22 - a12*a21.
Сложив все слагаемые со знаком плюс и вычитая со знаком минус, получим определитель.