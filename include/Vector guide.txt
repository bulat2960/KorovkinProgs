Вектор предельно прост - это как обычный динамический массив, только обладает некоторым количеством функций, которые значительно облегчают работу с массивом.
Итак, вектор, как и динамический массив, имеет два поля - собственно, сам указатель на массив, и его размер. Имеет два конструктора - по умолчанию и 
копирующий. Деструктор, который убивает динамический массив при уничтожении объекта. Методы front и back, возвращающие по необходимости первый и последний
элементы соответственно. Метод empty, проверяющий, есть ли в массиве элементы и возвращающий истину(вектор пуст), если элементов нет, и ложь(не пуст), 
если они есть. Метод size, позволяющий вернуть длину вектора. Метод resize, позволяющий менять длину вектора, и инициализирующий поля вектора нулями.
Метод clear, который чистит вектор, освобождая память, занятую им(сам объект-вектор не удаляется, и в него снова можно запихивать элементы). И соответственно,
самые важные функции вектора - push_front и push_back, добавляющие элемент в начало или в конец вектора соответственно.
Принцип работы push_back и push_front(пункты 1 и 2 относятся к обоим случаям):
1. Создается копия текущего массива result, содержащая все его элементы.
2. Удаляется текущий массив, значение _storSize увеличивается на 1, выделяется память для массива на 1 элемент больше.
3.push_back. Бежим циклом по новому массиву, и пока мы не достигли последнего элемента (i != _storSize - 1), переносим в него старые. Если же счетчик цикла
равен последнему элементу, добавляем в массив полученный элемент data.

3.push_front. Бежим циклом по новому массиву, и на первой же итерации заносим полученный элемент в массив(то есть он поместится в начало). Далее заносим 
оставшиеся элементы со смещением 1(так как нулевой элемент из сохраненного массива должен поместиться в первый нового, и так далее).