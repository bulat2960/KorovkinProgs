Шаблонный класс Vector представляет собой обертку над динамическим массивом с набором методов, значительно упрощающих работу с ним. Данный гайд содержит 
детальное рассмотрение внутренней структуры данного класса.

Private раздел:
Тут все довольно просто - для динамического массива нам нужен соответственно указатель, по которому будет выделяться память на массив, и его размер.

Public раздел:
Как и любой класс, данный раздел содержит основные методы работы. Разберем детально работу каждого.
1. Первым идет конструктор по умолчанию - здесь кажется всё понятно. Инициализируем указатели nullptr, а числовые переменные нулями.
2. Далее идет конструктор с параметром. Он также предельно прост - задаем размер массива и выделяем память под него.
3. Конструктор копирования для создания нового объекта-копии: в *this переносим получаемый вектор.
4. Оператор= немного отличается от конструктора копирования, но выполняет почти то же самое, только уже для существующего объекта. Поэтому первой строчкой
в нем мы очищаем память у существующего массива, а потом выполняем действия, аналогичные копирующему конструктору.
5. Деструктор, очищающий память массива при уничтожении объекта.
6-7. Методы push_back и push_front, добавляющие элемент в конец и в начало массива соответственно. Содержат одинаковое начало - сохраняется копия текущего
массива, сам массив после этого удаляется, далее выделяется память на массив, на 1 элемент превышающий старый. Далее эти методы содержат небольшое различие.
Метод push_back бежит по циклу, и пока не дошел до последнего элемента, переносит данные из сохраненного массива, а на последней итерации добавляет новый.
Метод push_back сразу же добавляет новый элемент при первой же итерации, а после переносит данные из старого массива со смещением на 1, так как нулевой
элемент старого массива должен быть на первом элементе нового, и так далее.
8. Метод size возвращает длину текущего массива.
9. Метод resize перезаписывает длину текущего массива, удаляя старый и выделяя память под новый увеличенный массив.
10. Метод empty проверяет, является ли нулевой длина массива и возвращает истину, если да, и ложь, если нет.
11. Метод clear - удаляет текущий массив. Сам объект при этом не удаляется, и можно заново заполнить его элементами.
12-13. Методы front и back возвращают соответственно первый и последний элементы в массиве.
14. Оператор[] возвращает ссылку на запрошенный элемент. При указании индекса, выходящего за пределы массива, становится злобным и бросается исключением.