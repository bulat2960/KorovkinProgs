Задача:
Реализовать шаблон следующего класса
CL12. Стек с фиксированной емкостью.

Решение:
Функция main содержит лишь проверку работоспособности, перейдем сразу к внутреннему устройству класса.
1. Данная реализация стека напоминает список. Есть узел, содержащий данные и указатель на следующий элемент и указатель на хвост стека. Также содержит
текущую длину стека и максимальную(так как стек должен быть фиксированной емкости по условию).
2. Конструктор по умолчанию - тут все понятно.
3. Деструктор. Запоминаем переменную-хвост. Начинаем цикл. Переходим на следующий элемент вниз по стеку(если не нулевой), удаляем хвост, присваиваем хвосту 
новый текущий элемент, повторяем действия.
4. Метод push: кидает исключение, если пытаемся добавить элемент в полный стек. Иначе, создаем узел стека и записываем в него данные. Если элемент - первый,
присваиваем его хвосту, а хвост указывает в никуда. Иначе связываем его с предыдущим элементом и задаем новый хвост. Увеличиваем размер стека на 1.
5. Метод top: кидает исключение если стек пуст, иначе возвращает последний добавленный элемент.
6. Метод pop: кидает исключение если стек пуст, иначе меняет указатель хвоста на предыдущий элемент и удаляет бывший хвост.
7. Метод print: кидает исключение если стек пуст, иначе итерирует по стеку, пока не достигли конца и выводит поле data.

Для чайников: стек можно представить в виде коробочки, в которую кладут элементы, и каждый новый элемент связывается c тем, что был добавлен ранее.
Держите самодельную пикчу:
|    data2    |
|      |      |
|     \ /     |
|      .      |
|    data1    |
|      |      |
|     \ /     |
|      .      |
|    data0    |
|      |      |
|     \ /     |
|      .      |
||||nullptr||||
Сначала добавлен узел data0, связанный с пустотой, после - узел data1, связанный с узлом data0 и так далее.