Задание:
CL25. Путем перестановки элементов квадратной матрицы
(10х10) добиться того, чтобы ее максимальный элемент находился в левом
верхнем углу, следующий по величине – в позиции (2,2), следующий по
величине – в позиции (3,3) и т.д., заполнив таким образом всю главную
диагональ.

Решение:
1. Объявляем матрицу размера SIZE*SIZE, где SIZE = 10(по условию задачи).
2. Запускаем функцию генерации generateMatrix, которая инициализирует каждое поле матрицы случайным значением от 0 до 99.
3. Показываем матрицу вызовом функции showMatrix. NOTE: функция setw(...) из стандартной библиотеки задает размер поля вывода.
4. Вызываем главную функцию этой задачи - swapElements. Ее принцип работы таков - 10 раз пробегая по матрице и каждый раз
фиксируя элемент, который нужно заменить(сначала первый элемент диагонали [0, 0], потом [1, 1] и так далее), заменяет его максимальным
элементом в матрице, но пропускает те элементы, которые находятся на самой главной диагонали. Иначе в процессе работы программы
элементы, которые были уже правильно поставлены ранее(например, первый элемент в диагонали) будут заменены. Итог выполнения этой функции - 
на главной диагонали будут содержаться все 10 максимальных элементов в матрице.
5. Функция specialSituation решает вопрос, который был не решен в четвертом пункте. Если окажется, к примеру, ситуация, когда где-нибудь 
на главной диагонали окажется самый максимальный элемент во всей матрице, он не будет переставлен на первое место в связи с тем, что в четвертом
пункте функция пропускает те элементы, которые находятся на этой диагонали. Данная функция отсортирует эту диагональ в порядке убывания элементов.
6. Снова выводим матрицу функцией showMatrix, получаем матрицу, удовлетворяющую условиям задачи.